"id","task_id/id","work_summary_type_id/id","name","hours","create_date","write_date","user_id/id"
"__export__.project_task_work_531096","__export__.project_task_71859","__export__.project_task_work_summary_type_30","11./ Watched 1st video on Module creating and created a Real Estate Module for learning purposes, defined and created Model, BaseModel, Fields, xml file inside view folder that has tree view, form view, search view, action: ir.actions.act_window, 3 menuitems element and learned record tag. created a ir.model.access.csv file for access right of that model and Tested and Verified the output.","3.0","2022-01-20 14:01:00","2022-01-20 14:01:00","__export__.res_users_604"
"__export__.project_task_work_531095","__export__.project_task_71859","__export__.project_task_work_summary_type_30","10./ Folder Structure: Module Folder, __init__.py file and it's importance of sequence of import,   __manifest__.py file importance of sequence of data file, and depends files, models, views, wizard, reports, controllers, security, static, data.","0.5","2022-01-20 13:55:12","2022-01-20 13:55:12","__export__.res_users_604"
"__export__.project_task_work_531094","__export__.project_task_71859","__export__.project_task_work_summary_type_30","9./ Meeting with project manager: Discussed about 1. Module 2. Model: model contains business logic and in loose definition it is a set or records or a table, Logical partition : Business Model and Framework Model, Technical Partition: Model, Abstract Model, Transient Model, Odoo Model: ir.model,  3. Fields: Odoo Model: ir.model.fields, Datatypes of fields and attributes of fields, 4. View: visual element or UI list view, kanban view, calendar view, pivot view, graph view, activity view, form view, search view, we can specify multiple view on single model, 5. Action: what to do, can load view, run script in background, Types of action: Window, Server, Client, URL, Report. Odoo Model: ir.actions.actions, ir.actions.act_window. 6. Menu: Top Level Menu, and Other sub Menu, Odoo model: ir.ui.menu, 7./ Security: Odoo Model: ir.model.access, ir.rule, res.groups whole topic covered    ==>> Special Mention Domain and Context in ir.actions.act_window table records, view and view xml id sequence in ir.actions.act_window","2.0","2022-01-20 13:50:25","2022-01-20 13:50:25","__export__.res_users_604"
"__export__.project_task_work_530831","__export__.project_task_71859","__export__.project_task_work_summary_type_30","8./ Security: Odoo Model: ir.model.access, 2 types of rules: Access Rule and Record Rule, Access Rule defines create, read, update, delete access right to various user groups on Model and Menu. -> Record Rule or filter: Mode: ir.rule, it is CRUD activity tracker or trigger, It defines rule that allow valid user to read certain record or perform operation. It is second level security. For example: A salesperson can only access orders which are created by him only. while records created by other salesperson will not be visible to current salesperson. Global Rule: Applicable to all users, Group Rule: Applicable to particular user, Rule Applicable to user = Global Rule 1 and Global Rule 2 and ... and (Group Rule 1 or Group Rule 2 or ...)","1.0","2022-01-20 04:04:48","2022-01-20 04:19:51","__export__.res_users_604"
"__export__.project_task_work_530810","__export__.project_task_71859","__export__.project_task_work_summary_type_30","7./ Menu: screen shown after login is called main dashboard, and apps in it are called Top Level Menu, Odoo Model: ir.ui.menu, defines menu hierarchy and lists menu that has action associated with it.","1.0","2022-01-20 03:53:49","2022-01-20 04:04:48","__export__.res_users_604"
"__export__.project_task_work_530760","__export__.project_task_71859","__export__.project_task_work_summary_type_30","6./ Views: list view, kanban view, calendar view, pivot view, graph view, activity view, form view, search view.  -> we can define multiple views for a single model also.  -=> Action: defines what to do. can load view, run a script in background, attached to model. called form menu or contextual menu, types of action: ->> Window, Server, Client, URL, Report, Schedule Action or Cron Job, Odoo model: ir.actions.actions, ir.actions.act_window","2.0","2022-01-19 13:53:07","2022-01-20 04:04:48","__export__.res_users_604"
"__export__.project_task_work_530617","__export__.project_task_71859","__export__.project_task_work_summary_type_30","5./ Fields: Fields are basically like column in database but in odoo we call it field instead of column. Likewise Fields also have datatypes. In Odoo datatypes of fields are Integer, Float, Boolean, Char, Html, Binary, Image, ManytoOne, OnetoMany etc...,   -=> Attributes: required, readonly, copy, index, invisible,default etc.. ","2.0","2022-01-19 10:16:29","2022-01-19 10:16:29","__export__.res_users_604"
"__export__.project_task_work_530612","__export__.project_task_71859","__export__.project_task_work_summary_type_30","4./ Model: Model is basically a folder or a database table in loose definition. Model handles business logic and communicates with database to perform and fulfil the needs of that business logic.   -=> Model, Transient Model, Abstract Model, Transient Model : Stores Data Temporary, It may used in wizards or popup screens because in such cases we don't need that data in future after our work is completed similarly can be used to generate reports.","2.0","2022-01-19 10:11:16","2022-01-19 10:11:16","__export__.res_users_604"
"__export__.project_task_work_530608","__export__.project_task_71859","__export__.project_task_work_summary_type_30","3./ Module: Watched the video and understood that every thing in odoo is module and how we can install and upgrade the module, Developer Mode in Odoo.","0.333333333333","2022-01-19 10:01:04","2022-01-19 10:01:04","__export__.res_users_604"
"__export__.project_task_work_530605","__export__.project_task_71859","__export__.project_task_work_summary_type_30","2./ Meeting with Project Manager Videos are given to us and explained the work and learning process.","0.25","2022-01-19 09:58:00","2022-01-19 09:58:00","__export__.res_users_604"
"__export__.project_task_work_530500","__export__.project_task_71859","__export__.project_task_work_summary_type_30","1./ Created a Module named 'estate' and it's model for learning purposes and installed that module, Read 3 chapters from Odoo documentation and understood the use of Manifest file and it's configuration. Currently Learning Views and creation of menu, and generating UI with xml file","2.0","2022-01-19 05:58:12","2022-01-19 06:19:20","__export__.res_users_604"
"__export__.project_task_work_530567","__export__.project_task_71258","__export__.project_task_work_summary_type_30","4./ GitHub Repository odoo_exercise_1 created. Created new PyCharm project for Odoo and project name is Odoo, Project has Odoo Community and Enterprise edition, added the addons paths of odoo built-in addons, custom addons and Enterprise addons to the configuration file. Created A Module named 'estate' and created estate.properties model for it and installed that module into Odoo.","3.0","2022-01-19 09:03:10","2022-01-19 09:10:22","__export__.res_users_604"
"__export__.project_task_work_530504","__export__.project_task_71258","__export__.project_task_work_summary_type_30","3./ Odoo Configuration with PyCharm, PostgreSQL configuration, odoo configuration file, dependencies installation, python version upgrade, odoo database creation, odoo ui overview, created a model in odoo, Watched videos Odoo pycharm configuration, odoo sales, inventory, purchase modules and overview of process of business operations. Overview of Odoo source code and odoo modules. Overview of architecture of odoo and odoo ORM layer, Model, Controller, View, Menu, Fields, Actions and Security.","3.5","2022-01-19 06:13:42","2022-01-19 09:00:31","__export__.res_users_604"
"__export__.project_task_work_530502","__export__.project_task_71258","__export__.project_task_work_summary_type_30","2./ Understood ERP and Odoo: Learned ERP use-cases and analysed the use of ERP in real life with example,  ->Odoo -> Suite of Business applications, Community edition: Execution environment and Built-in Modules, Enterprise edition: Enterprise Modules, Model: business logic, View xml, Controller: connector, Action, Fields, Menu, Security Overview","3.0","2022-01-19 06:06:16","2022-01-19 09:00:31","__export__.res_users_604"
"__export__.project_task_work_530501","__export__.project_task_71258","__export__.project_task_work_summary_type_30","1./ Meeting with project manager ->ERP: Discussed about ERP (what is ERP?), funcitons and uses of ERP, discussed some use-cases of ERP, and defined the purpose of ERP.  ->Framework:  what is Framework, what are the advantages of using framework, MVC architecture.  -> Odoo :  what is Odoo, python, xml, javascript, css, html, Community and Enterprise Edition, why odoo, what are the modules...","0.75","2022-01-19 06:00:49","2022-01-19 09:01:20","__export__.res_users_604"
"__export__.project_task_work_529875","__export__.project_task_70974","__export__.project_task_work_summary_type_30","28./ XML Node types and constants, Node object properties, node object methods. --> xml.dom.minidom  - parse(), parseString(), file.firstChild.tagName, getElementsByTagName(), getAttribute(), hasAttribute(), .childNodes, .attributes, .attributes.items(), getDOMImplementation().  --> CSV module  -  csv.reader(), csv.writer(), writerow(), writerows(), csv.DIctReader(), csv.DictWriter(), next(), DIctWriter.writeheader(). --> OpenPyXl module -  workbook, worksheet, create_sheet(), title, copy_worksheet(), cell(), iter_rows(), iter_cols(), append(), save(), load_workbook().","2.0","2022-01-17 11:47:17","2022-01-17 11:47:17","__export__.res_users_604"
"__export__.project_task_work_529870","__export__.project_task_70974","__export__.project_task_work_summary_type_30","27./ Revision of Python Math module (min(), max(), abs(), pow(), sqrt(), ceil(), floor(), math.pi),  -->  JSON (JavaScript Object Notation) (loads(), dumps(), Format JSON output and format separators) Python objects that can be converted into JSON are dict, list, tuple, str, int, float, True, False, None. JSON types are object, Array, String, Number, true, false, null. --> Try Except revised try, except, finally, else, raise --> Revised User Input input() method.  --> String Format, multiple values, index number, Named indexes. --> File Handling open(), Modes (r - read, a - append, w - write, x - create, t - text, b - binary) read(), readline(), readlines(), close(), append(). --> os Module -  os.remove(), os.path.exists(), os.rmdir()","4.0","2022-01-17 11:36:26","2022-01-17 11:36:26","__export__.res_users_604"
"__export__.project_task_work_530191","__export__.project_task_71258","__export__.project_task_work_summary_type_30","28./ XML Node types and constants, Node object properties, node object methods. --> xml.dom.minidom  - parse(), parseString(), file.firstChild.tagName, getElementsByTagName(), getAttribute(), hasAttribute(), .childNodes, .attributes, .attributes.items(), getDOMImplementation().  --> CSV module  -  csv.reader(), csv.writer(), writerow(), writerows(), csv.DIctReader(), csv.DictWriter(), next(), DIctWriter.writeheader(). --> OpenPyXl module -  workbook, worksheet, create_sheet(), title, copy_worksheet(), cell(), iter_rows(), iter_cols(), append(), save(), load_workbook().","2.0","2022-01-18 08:53:53","2022-01-18 08:54:49","__export__.res_users_604"
"__export__.project_task_work_530188","__export__.project_task_71258","__export__.project_task_work_summary_type_30","27./ Revision of Python Math module (min(), max(), abs(), pow(), sqrt(), ceil(), floor(), math.pi),  -->  JSON (JavaScript Object Notation) (loads(), dumps(), Format JSON output and format separators) Python objects that can be converted into JSON are dict, list, tuple, str, int, float, True, False, None. JSON types are object, Array, String, Number, true, false, null. --> Try Except revised try, except, finally, else, raise --> Revised User Input input() method.  --> String Format, multiple values, index number, Named indexes. --> File Handling open(), Modes (r - read, a - append, w - write, x - create, t - text, b - binary) read(), readline(), readlines(), close(), append(). --> os Module -  os.remove(), os.path.exists(), os.rmdir()","3.0","2022-01-18 08:52:58","2022-01-19 06:00:49","__export__.res_users_604"
"__export__.project_task_work_529603","__export__.project_task_71258","__export__.project_task_work_summary_type_30","26./ Program 11 --> Missing functionality remaining hours added comments added and Done.  --> Program 9 --> Issue with Order State is resolved and created a Improved version of program in 2.py file which has slightly less code complexity in change_order_state() method and comments are added.  --> Program 12 --> comments are added, Issue with Order State and Delivery State is resolved and slightly reduced the code complexity of change_order_state() and change_delivery_order_state() method.","2.0","2022-01-15 06:35:42","2022-01-19 06:00:49","__export__.res_users_604"
"__export__.project_task_work_529593","__export__.project_task_71258","__export__.project_task_work_summary_type_30","25./ Meeting with Project Manager --> reviewed the Program 9 ---> Issue with Order State is found and comments are not added to program by me..    --> Program 10 --> Reviewed and Done.  --> Program 11 --> Reviewed and found remaining hours functionality missing  --> Program 12 -->  reviewed and found issue with delivery order State and comments are not added by me..","0.666666666667","2022-01-15 06:25:51","2022-01-15 06:25:51","__export__.res_users_604"
"__export__.project_task_work_529392","__export__.project_task_71258","__export__.project_task_work_summary_type_30","24./ Program 12 --> Initially Done and gives desired output. class Sales_Order created and it inherits SalesTransaction class It has prepare_delivery_order() method, manage_delivery_order() method, create_delivery_order() method, set_order_state_to_confirm() method inherit and called manage_delivery_order() from it, display_delivery_order() method, change_delivery_order_status() method, cancel_delivery_order() method, validate_delivery_order() method inherits set_order_to_done() method.","2.5","2022-01-13 11:28:45","2022-01-19 06:00:49","__export__.res_users_604"
"__export__.project_task_work_529393","__export__.project_task_71258","__export__.project_task_work_summary_type_27","23./ Program 12 --> Analysed the requirements gathered the information and states the problem definition of program. Menu Driven Program 1. Validate Delivery 2. Cancel Order Delivery options in the menu added, new Dictionary called delivery_order needs to be created when order state is confirmed.","2.5","2022-01-13 11:28:45","2022-01-13 11:28:45","__export__.res_users_604"
"__export__.project_task_work_529377","__export__.project_task_71258","__export__.project_task_work_summary_type_30","22./ Program 11 --> Initially Done and gives desired output. I have used filter() method, map() method, list() constructor and sum() method. Thus I have learned and understood that items in nested dictionaries can be accessed without using loops. I have learned and understood how items in dictionaries can be filtered to get different Results","2.5","2022-01-13 10:53:51","2022-01-13 10:53:51","__export__.res_users_604"
"__export__.project_task_work_529368","__export__.project_task_71258","__export__.project_task_work_summary_type_30","21./ Program 10 --> Initially Done and gives desired output. I have used functools.reduce() method, filter() method and sum() method to solve this program. Thus I have understood that items nested list can be accessed without using loops.","1.5","2022-01-13 10:41:00","2022-01-13 10:53:51","__export__.res_users_604"
"__export__.project_task_work_529364","__export__.project_task_71258","__export__.project_task_work_summary_type_30","20./ Program 9 --> Errors in order state and order_lines state are solved. Separate function created for Set to Draft, Set to Confirm, Set to Done and Set to Cancel. Thus improves code re-usability.","2.0","2022-01-13 10:37:40","2022-01-13 10:37:40","__export__.res_users_604"
"__export__.project_task_work_529064","__export__.project_task_71258","__export__.project_task_work_summary_type_30","19./ Meeting with Project Manager --> program 6, 7, 8 evaluated ,  -->Program 9 --> Description and problem definition and input, output are given. Basic Structure of program and way of coding are explained","0.616666666667","2022-01-12 13:27:26","2022-01-12 13:27:26","__export__.res_users_604"
"__export__.project_task_work_529061","__export__.project_task_71258","__export__.project_task_work_summary_type_30","18./ Program 9 --> Initially Done and gives desired output.   --->    product_details dictionary, product_stock dictionary, customer_details dictionary, customer_address dictionary, order_details_dictionary, manage_product() function, prepare_product() function, create_product() function, manage_customer() function, prepare_customer() function, create_customer() function, generate_order() function, prepare_order() function, prepare_order_lines() function, create_sales_order function, display_products() function, display_customers() function, display_sales_order() function, update_product() function, change_order_state() function, generate_invoice() function.    --> Issues and Errors Solved all Functionalities are implemented.","4.0","2022-01-12 13:23:39","2022-01-15 06:35:27","__export__.res_users_604"
"__export__.project_task_work_529050","__export__.project_task_71258","__export__.project_task_work_summary_type_27","17./ Analysing The Requirements of Program 9 --> Menu Driven Program,   --> Program 9 Video watched, that described the functionality, input, output, code re-usability and readability.   --> Understood why i should create separate function for user_input or preparation, manager function to pass input data to appropriate method, and create function to create dictionary or assigning values to global variable or properties.   Thus enhancing code re-usability (function can be inherited in future), readability and reducing redundancy ","5.0","2022-01-12 13:12:12","2022-01-15 06:35:27","__export__.res_users_604"
"__export__.project_task_work_528738","__export__.project_task_71258","__export__.project_task_work_summary_type_30","16./ Meeting with Project Manager : Program 4 is evaluated and reviewed","0.5","2022-01-11 13:53:43","2022-01-11 13:53:43","__export__.res_users_604"
"__export__.project_task_work_528739","__export__.project_task_71258","__export__.project_task_work_summary_type_27","15./ Program 9 --> Read the whole problem definition and understood the requirements. Requirements of the programs are Product Dictionary, Customer Dictionary, Sales_Order Dictionary, prepare_product() method, prepare_customer method, manage_product() method, prepare_order_lines() method, prepare_sales_order() method, Create a Menu from which user can navigate through and select appropriate choice to call a method or enter required fields, unique incremental sku with prefix PRD as a key in product dictionary, unique incremental customer id with prefix c as key in customer dictionary, unique incremental sales_order dictionary id as a key","4.0","2022-01-11 13:53:43","2022-01-11 13:53:43","__export__.res_users_604"
"__export__.project_task_work_528724","__export__.project_task_71258","__export__.project_task_work_summary_type_30","14./ Program 6 --> Removed Unnecessary for loop from the program thus simplifies the program and enhance the readability","0.25","2022-01-11 13:43:05","2022-01-11 13:43:05","__export__.res_users_604"
"__export__.project_task_work_528536","__export__.project_task_71258","__export__.project_task_work_summary_type_30","13./ Learned openpyxl module and its funcitons like Workbook(), create_sheet(), title(), append(), save(), active(), cell(), load_workbook(), close(), and properties like max_column, max_row.  --> Program 8 --> Initially Done and gives desired output.","1.5","2022-01-11 07:18:32","2022-01-11 07:18:32","__export__.res_users_604"
"__export__.project_task_work_528534","__export__.project_task_71258","__export__.project_task_work_summary_type_30","12./ Learned csv module methods like writer(), reader(), writerow(), writerows(), open(), accessing through index number.   --> Program 7 --> Initially done and gives desired output. ","0.5","2022-01-11 07:13:59","2022-01-11 07:13:59","__export__.res_users_604"
"__export__.project_task_work_528532","__export__.project_task_71258","__export__.project_task_work_summary_type_30","11./ Program 6 error solved --> Error was due to looping through csv.reader iterable object 2 times which returns empty list on second loop. Solving Error --> Created a new list variable that stores reader object value and looping, reading value from that list variable","2.5","2022-01-11 07:10:14","2022-01-11 07:10:14","__export__.res_users_604"
"__export__.project_task_work_528352","__export__.project_task_71258","__export__.project_task_work_summary_type_30","10./ Program 6 --> Progress halted, dictionary from csv file is created, cannot be able to add dictionaries to orderlines list","1.0","2022-01-10 13:51:05","2022-01-10 13:51:05","__export__.res_users_604"
"__export__.project_task_work_528353","__export__.project_task_71258","__export__.project_task_work_summary_type_30","9./ Learned CSV module of Python. Learned functionality of csv module like reader() function and implementing it with keyword instead of try Except. Learned use of with keyword, Learned to access row as list and row element from csv file, Learned to access fields as a list from csv file","1.0","2022-01-10 13:51:05","2022-01-10 13:51:05","__export__.res_users_604"
"__export__.project_task_work_528351","__export__.project_task_71258","__export__.project_task_work_summary_type_30","8./ Issues is previous Program is resolved Program 4 total_product_quantity is added, Program 4 requirements and functionality added and fulfilled.   --> Program 5 is Initially completed reading from XML file","1.5","2022-01-10 13:41:44","2022-01-10 13:41:44","__export__.res_users_604"
"__export__.project_task_work_528343","__export__.project_task_71258","__export__.project_task_work_summary_type_30","7./ Meeting with Project Manager: Program 2 and 3 are analysed and evaluated some readability issues are found,    --> Requirements of Program 4 and 5 are defined, Problem definition is given, and sample output is given","0.666666666667","2022-01-10 13:37:06","2022-01-10 13:37:06","__export__.res_users_604"
"__export__.project_task_work_528333","__export__.project_task_71258","__export__.project_task_work_summary_type_30","6./ Learning xml.dom.minidom module and it's functions and properties, Learning about DOM (Document Object Model), Learning about XML node types, In xml.dom.mindom module I have learned about parse function, childNodes, ELEMENT_NODE, tagName, nodeName, getAttribute() method, getElementsByTagName() method, firstChild","2.0","2022-01-10 13:32:18","2022-01-10 13:32:18","__export__.res_users_604"
"__export__.project_task_work_528301","__export__.project_task_71258","__export__.project_task_work_summary_type_30","5./ Learning and Revising some Python Concepts and functions like map(), filter(), zip(), reduce(), accumulate(), all(), any(), sum(), Dict Comprehension, loop through dictionary, sorted() key = , dict sort by value, itemgetter(), use of itemgetter in sorted function, use of itemgetter along with map function in sorted funciton of operator module","3.0","2022-01-10 13:21:50","2022-01-10 13:21:50","__export__.res_users_604"
"__export__.project_task_work_528021","__export__.project_task_71258","__export__.project_task_work_summary_type_30","3./ Program 1 --> Revised Created a simplified version some issues resolved and Tested.   --> Program 2 --> Initially Done. and Tested has 4 classes (Manufacturing, Purchase(Manufacturing), Scrapping(Manufacturing), Product(Manufacturing))  -->  Program 3 --> Initially done and Tested --> Program 4 --> Initially Done and Tested      4./  All 4 Programs pushed to remote GitHub Directory python_exercise_2  5./ Analysis of program 4 and Indexed, Incremental Dictionary Creation, Update, Item Fetching requirements are analysed","3.0","2022-01-08 08:25:40","2022-01-15 06:35:27","__export__.res_users_604"
"__export__.project_task_work_528020","__export__.project_task_71258","__export__.project_task_work_summary_type_30","4./ Meeting with Project Manager: Program 1 evaluated, readability and functionality Issue raised, Discussed about Program 2 Requirements and Functionality","0.5","2022-01-08 08:25:40","2022-01-08 08:25:40","__export__.res_users_604"
"__export__.project_task_work_527749","__export__.project_task_71258","__export__.project_task_work_summary_type_30","2./ Program 1  --> Initially Done   --> GitHub Repository Created  -->PyCharm Project Created  --> Problem Analysed, Problem Defined, Logic Building, Coding, Testing   --> Some Additional Functionality added   --> Program 1 pushed to remote Repository","1.5","2022-01-07 14:09:15","2022-01-07 14:10:20","__export__.res_users_604"
"__export__.project_task_work_527750","__export__.project_task_71258","__export__.project_task_work_summary_type_39","Previous Task work summary Listed and Described","0.25","2022-01-07 14:09:15","2022-01-07 14:09:15","__export__.res_users_604"
"__export__.project_task_work_527751","__export__.project_task_71258","__export__.project_task_work_summary_type_30","1./ Meeting with Project Manager: Explained the Task, GitHub Repository name, Do's and Don't in process of completing task","0.75","2022-01-07 14:09:15","2022-01-07 14:09:15","__export__.res_users_604"
"__export__.project_task_work_527646","__export__.project_task_70978","__export__.project_task_work_summary_type_30","3./ As per Guidance given in the Meeting I have fixed Errors, Readability and Efficiency Issues in the Program.  Some New Concepts are learned and Implemented on the programs like -->  all(), any(), sum(), reduce(), zip(), Dictionary Comprehension, sorted(), itemgetter(), loop through key:val pair using items(), Multiple Inheritance       x==> Task Completed","2.5","2022-01-07 12:16:15","2022-01-07 12:16:44","__export__.res_users_604"
"__export__.project_task_work_527559","__export__.project_task_70978","__export__.project_task_work_summary_type_39","Listed and Described the Task","0.166666666667","2022-01-07 09:08:28","2022-01-07 09:08:28","__export__.res_users_604"
"__export__.project_task_work_527557","__export__.project_task_70978","__export__.project_task_work_summary_type_30","2./ Meeting with Project Manager: Programs is reviewed by PM, Issues with Code Readability and Code Efficiency in my code is discussed and highlighted,  --> Suggested things like (all() fq, sum() fq, dict comprehension, diff bet list() and copy(), sorted() and itemgetter(), and use of dict.items() in for loop), --> Suggested to implement Multiple inheritance in Order, Product and Customer program where Order should inherit Customer and Product class.","1.75","2022-01-07 09:06:46","2022-01-07 09:06:46","__export__.res_users_604"
"__export__.project_task_work_527558","__export__.project_task_70978","__export__.project_task_work_summary_type_30","1./ Revised Git and GitHub concepts like branch, areas like (Untracked files, Modified files, Staging area, Local Repository, Remote Repository), Commands like (checkout, branch, clone, log, add, commit)","2.0","2022-01-07 09:06:46","2022-01-07 09:06:46","__export__.res_users_604"
"__export__.project_task_work_527354","__export__.project_task_70978","__export__.project_task_work_summary_type_30","1./ Created new GitHub Repository (python_exercise_1),  2./ Python Exercise 1 : All 38 programs of the exercise are done but may need to revise if some of them can be optimised or can be able to shorten by using functions like lambda, filter, map, reduce, zip;  -> I have pushed all the programs of python exercise 1 into GitHub Repository python_exercise_1 on branch shyamg;  -> Most Frequent concepts I have used and covered in programs are: variable, datatypes, Set, Tuple, List, Dictionary, List Comprehention, Arbitary Arguments, List or Tuple inside Dictionary, Nested Dictionaries, Looping Through Iterable objects(list, tuple, set etc..), Various Methods of accessing dictionary and Iterable object's items, Functions, Lambda Functions, Filter Function, Map Function, Range Function, Inheritance ( Multi Level Inheritance)","8.5","2022-01-06 13:39:33","2022-01-07 04:49:20","__export__.res_users_604"
"__export__.project_task_work_527136","__export__.project_task_70978","__export__.project_task_work_summary_type_27","1./ Analyse and Review The Programs,   2./ Logic Building, Writing Program Definitions, Solving Errors, Generating Algorithm or steps of solving the program  3./ Rewriting some programs","1.5","2022-01-06 08:59:59","2022-01-07 04:47:59","__export__.res_users_604"
"__export__.project_task_work_527458","__export__.project_task_70978","__export__.project_task_work_summary_type_68","Employment Induction Feedback Survey","0.25","2022-01-07 04:56:15","2022-01-07 04:56:15","__export__.res_users_604"
"__export__.project_task_work_527448","__export__.project_task_70978","__export__.project_task_work_summary_type_39","Listed and Described the Task that i have completed","0.5","2022-01-07 04:47:59","2022-01-07 04:47:59","__export__.res_users_604"
"__export__.project_task_work_527447","__export__.project_task_70974","__export__.project_task_work_summary_type_39","Listed and Described the Task That I have completed","0.5","2022-01-07 04:40:23","2022-01-07 04:40:23","__export__.res_users_604"
"__export__.project_task_work_527446","__export__.project_task_70974","__export__.project_task_work_summary_type_30","1./ Meeting with Project Manager  2./ Python Understanding(Python Variables, Python Data Types, Python Strings, (count, endswith, find, format, index, isspace, lstrip, replace, rfind, rindex, rstrip, zfill, strip, join), Python List, Python Dictionaries, Copying dictionary, Merge dictionaries, Iterating through dictionaries, Fetch value from dictionary, Python Tuples, Python Set, Python Functions, How to define a functions, Call one function from another, Learn how to return value from one function, Python Lambda, Python Built-in Functions, map, Python Class/Objects, Python Inheritance, Python Dates, Find no of Days between two dates, Find Day of the date, Find month of the date, Find year of the date, Convert string to date, Subtract n no of days from a date and find that date, Add year to a date Find date of next Tuesday or Wednesday, Add month to a date, Find no of months between two dates, Find no of years between two dates, Python String Format) are covered Python Understanding Task and it is completed.  3./  Fatching items from Nested Dictionary and List, Nested List or Tuple inside Dictionary  4./ Multi Level Inheritance Program","7.0","2022-01-07 04:38:10","2022-01-07 04:38:10","__export__.res_users_604"
"__export__.project_task_work_527444","__export__.project_task_70974","__export__.project_task_work_summary_type_30","GitHub SSH Key Generating, Adding Generated SSH Key to GitHub, Generated GitHub Token","1.0","2022-01-07 04:38:10","2022-01-07 04:38:10","__export__.res_users_604"
"__export__.project_task_work_527445","__export__.project_task_70974","__export__.project_task_work_summary_type_39","Listed and Described the tasks that i have completed, Learned functionality of the Task, Projects and Work entry in ERP","1.0","2022-01-07 04:38:10","2022-01-07 04:38:10","__export__.res_users_604"
"__export__.project_task_work_527439","__export__.project_task_70974","__export__.project_task_work_summary_type_30","1./ Meeting with Project Manager  2./ GitHub Repository (python_learning) & Video, PyCharm Configuration & Video, Task Video,  3./ Python Understanding(Python Variables, Python Data Types, Python Strings, (count, endswith, find, format, index, isspace, lstrip, replace, rfind, rindex, rstrip, zfill, strip, join), Python List, Python Dictionaries, Copying dictionary, Merge dictionaries, Iterating through dictionaries, Fetch value from dictionary, Python Tuples, Python Set, Python Functions, How to define a functions, Call one function from another, Learn how to return value from one function, Python Lambda, Python Built-in Functions, Python Class Object, Python Inheritance)","6.0","2022-01-07 04:29:12","2022-01-07 04:29:12","__export__.res_users_604"
"__export__.project_task_work_526191","__export__.project_task_70955","__export__.project_task_work_summary_type_46","Meeting: On Boarding || Reviewing ERP","2.0","2022-01-03 13:41:53","2022-01-03 13:41:53","__export__.res_users_604"
"__export__.project_task_work_526184","__export__.project_task_70954","__export__.project_task_work_summary_type_46","Meeting: On Boarding || ERP Review","8.0","2022-01-03 13:41:10","2022-01-03 13:41:10","__export__.res_users_604"
